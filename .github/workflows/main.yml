name: Org Monitoring sfdx-hardis

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions: read-all

jobs:
  backup:
    runs-on: ubuntu-latest
    name: Backup metadatas
    permissions: write-all
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        branch:
          - monitoring_krinkelsgreencare__upeodev_sandbox
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ matrix.branch }}
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install SFDX and plugins
        run: |
          npm install --no-cache @salesforce/cli --global
          sf plugins install --force @salesforce/plugin-packaging
          echo 'y' | sf plugins install --force sfdx-hardis
          echo 'y' | sf plugins install --force sfdx-git-delta
          sf version --verbose --json

      - name: Login & Retrieve Metadata
        env:
          SFDX_CLIENT_ID_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX: ${{ secrets.SFDX_CLIENT_ID_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX }}
          SFDX_CLIENT_KEY_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX: ${{ secrets.SFDX_CLIENT_KEY_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX }}
          SFDX_DEPLOY_WAIT_MINUTES: 120
          SFDX_TEST_WAIT_MINUTES: 120
          CI_COMMIT_REF_NAME: ${{ matrix.branch }}
          ORG_ALIAS: ${{ matrix.branch }}
          CONFIG_BRANCH: ${{ matrix.branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          NOTIF_EMAIL_ADDRESS: ${{ secrets.NOTIF_EMAIL_ADDRESS }}
          FORCE_COLOR: "1"
          NOTIF_API_URL: ${{ secrets.NOTIF_API_URL }}
          NOTIF_API_BASIC_AUTH_USERNAME: ${{ secrets.NOTIF_API_BASIC_AUTH_USERNAME }}
          NOTIF_API_BASIC_AUTH_PASSWORD: ${{ secrets.NOTIF_API_BASIC_AUTH_PASSWORD }}
          NOTIF_API_METRICS_URL: ${{ secrets.NOTIF_API_METRICS_URL }}
          NOTIF_API_METRICS_BASIC_AUTH_USERNAME: ${{ secrets.NOTIF_API_METRICS_BASIC_AUTH_USERNAME }}
          NOTIF_API_METRICS_BASIC_AUTH_PASSWORD: ${{ secrets.NOTIF_API_METRICS_BASIC_AUTH_PASSWORD }}
        run: |
          echo "Monitoring sfdx-hardis: Metadata Backup for \"$CONFIG_BRANCH\""
          sf hardis:auth:login
          sf hardis:org:monitor:backup

      - name: Prepare commit
        run: chown -Rc $UID .git/

      - name: Get current date
        run: echo "BUILD_DATE=$(date -u +'%Y-%m-%d %H:%M')" >> ${GITHUB_ENV}

      - name: Commit and push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ matrix.branch }}
          commit_message: "Org state on ${{ env.BUILD_DATE }} for ${{ matrix.branch }} [skip ci]"
          commit_user_name: sfdx-hardis-bot
          commit_user_email: contact@cloudity.com

  apex_tests:
    runs-on: ubuntu-latest
    name: Apex tests
    needs: backup
    permissions: write-all
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        branch:
          - monitoring_krinkelsgreencare__upeodev_sandbox
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ matrix.branch }}
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install SFDX and plugins
        run: |
          npm install --no-cache @salesforce/cli --global
          sf plugins install --force @salesforce/plugin-packaging
          echo 'y' | sf plugins install --force sfdx-hardis
          echo 'y' | sf plugins install --force sfdx-git-delta
          sf version --verbose --json

      - name: Login & Run apex tests
        env:
          SFDX_CLIENT_ID_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX: ${{ secrets.SFDX_CLIENT_ID_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX }}
          SFDX_CLIENT_KEY_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX: ${{ secrets.SFDX_CLIENT_KEY_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX }}
          SFDX_DEPLOY_WAIT_MINUTES: 120
          SFDX_TEST_WAIT_MINUTES: 120
          CI_COMMIT_REF_NAME: ${{ matrix.branch }}
          ORG_ALIAS: ${{ matrix.branch }}
          CONFIG_BRANCH: ${{ matrix.branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          NOTIF_EMAIL_ADDRESS: ${{ secrets.NOTIF_EMAIL_ADDRESS }}
          FORCE_COLOR: "1"
          NOTIF_API_URL: ${{ secrets.NOTIF_API_URL }}
          NOTIF_API_BASIC_AUTH_USERNAME: ${{ secrets.NOTIF_API_BASIC_AUTH_USERNAME }}
          NOTIF_API_BASIC_AUTH_PASSWORD: ${{ secrets.NOTIF_API_BASIC_AUTH_PASSWORD }}
          NOTIF_API_METRICS_URL: ${{ secrets.NOTIF_API_METRICS_URL }}
          NOTIF_API_METRICS_BASIC_AUTH_USERNAME: ${{ secrets.NOTIF_API_METRICS_BASIC_AUTH_USERNAME }}
          NOTIF_API_METRICS_BASIC_AUTH_PASSWORD: ${{ secrets.NOTIF_API_METRICS_BASIC_AUTH_PASSWORD }}
        run: |
          echo "Run apex tests against \"$CONFIG_BRANCH\""
          git pull origin ${{ matrix.branch }}
          sf hardis:auth:login
          sf hardis:org:test:apex

      - name: Upload artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: Hardis Apex Tests reports
          include-hidden-files: "true"
          path: |
            hardis-report

  megalinter:
    name: Mega-Linter
    runs-on: ubuntu-latest
    needs: backup
    permissions: read-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Git pull
        run: git pull origin ${{ matrix.branch }}

      - name: Mega-Linter
        id: ml
        uses: oxsecurity/megalinter/flavors/salesforce@latest
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOTIF_API_URL: ${{ secrets.NOTIF_API_URL }}
          NOTIF_API_BASIC_AUTH_USERNAME: ${{ secrets.NOTIF_API_BASIC_AUTH_USERNAME }}
          NOTIF_API_BASIC_AUTH_PASSWORD: ${{ secrets.NOTIF_API_BASIC_AUTH_PASSWORD }}
          NOTIF_API_METRICS_URL: ${{ secrets.NOTIF_API_METRICS_URL }}
          NOTIF_API_METRICS_BASIC_AUTH_USERNAME: ${{ secrets.NOTIF_API_METRICS_BASIC_AUTH_USERNAME }}
          NOTIF_API_METRICS_BASIC_AUTH_PASSWORD: ${{ secrets.NOTIF_API_METRICS_BASIC_AUTH_PASSWORD }}

      - name: Archive production artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: Mega-Linter reports
          include-hidden-files: "true"
          path: |
            megalinter-reports
            mega-linter.log

  monitoring:
    runs-on: ubuntu-latest
    name: Monitoring
    needs: backup
    permissions: read-all
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        branch:
          - monitoring_krinkelsgreencare__upeodev_sandbox
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ matrix.branch }}
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install SFDX and plugins
        run: |
          npm install --no-cache @salesforce/cli --global
          sf plugins install --force @salesforce/plugin-packaging
          echo 'y' | sf plugins install --force sfdx-hardis
          echo 'y' | sf plugins install --force sfdx-git-delta
          sf version --verbose --json

      - name: Login & Run monitoring checks
        env:
          SFDX_CLIENT_ID_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX: ${{ secrets.SFDX_CLIENT_ID_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX }}
          SFDX_CLIENT_KEY_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX: ${{ secrets.SFDX_CLIENT_KEY_MONITORING_KRINKELSGREENCARE__UPEODEV_SANDBOX }}
          SFDX_DEPLOY_WAIT_MINUTES: 120
          SFDX_TEST_WAIT_MINUTES: 120
          CI_COMMIT_REF_NAME: ${{ matrix.branch }}
          ORG_ALIAS: ${{ matrix.branch }}
          CONFIG_BRANCH: ${{ matrix.branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          NOTIF_EMAIL_ADDRESS: ${{ secrets.NOTIF_EMAIL_ADDRESS }}
          FORCE_COLOR: "1"
          NOTIF_API_URL: ${{ secrets.NOTIF_API_URL }}
          NOTIF_API_BASIC_AUTH_USERNAME: ${{ secrets.NOTIF_API_BASIC_AUTH_USERNAME }}
          NOTIF_API_BASIC_AUTH_PASSWORD: ${{ secrets.NOTIF_API_BASIC_AUTH_PASSWORD }}
          NOTIF_API_METRICS_URL: ${{ secrets.NOTIF_API_METRICS_URL }}
          NOTIF_API_METRICS_BASIC_AUTH_USERNAME: ${{ secrets.NOTIF_API_METRICS_BASIC_AUTH_USERNAME }}
          NOTIF_API_METRICS_BASIC_AUTH_PASSWORD: ${{ secrets.NOTIF_API_METRICS_BASIC_AUTH_PASSWORD }}
        run: |
          echo "Run Monitoring checks against \"$CONFIG_BRANCH\""
          git pull origin ${{ matrix.branch }}
          sf hardis:auth:login
          sf hardis:org:monitor:all

      - name: Upload artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: Hardis Monitoring reports
          include-hidden-files: "true"
          path: |
            hardis-report
