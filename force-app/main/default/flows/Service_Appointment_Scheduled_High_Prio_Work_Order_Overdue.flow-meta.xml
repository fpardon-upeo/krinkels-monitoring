<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Sends the notification to the CM</description>
        <name>Send_Delay_Notification_to_Contract_Manager</name>
        <label>Send Delay Notification to Contract Manager</label>
        <locationX>308</locationX>
        <locationY>684</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Set_Reminder_send_checkbox_to_True</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <stringValue>{!Get_Custom_Notification.Id}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varRecipientIDs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>NotificationTitle</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>NotificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <assignments>
        <description>Assign the contract manager to the recipient list</description>
        <name>Assign_Recipient_ID</name>
        <label>Assign Recipient ID</label>
        <locationX>308</locationX>
        <locationY>468</locationY>
        <assignmentItems>
            <assignToReference>varRecipientIDs</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>{!Get_Contract_Manager.Id}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Custom_Notification</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Contract_Manager_Found</name>
        <label>Contract Manager Found</label>
        <locationX>176</locationX>
        <locationY>360</locationY>
        <defaultConnector>
            <targetReference>Assign_Recipient_ID</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>No</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Contract_Manager</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>No</label>
        </rules>
    </decisions>
    <description>sends notification to Contract Manager when a high prio work order is overdue</description>
    <environments>Default</environments>
    <interviewLabel>[Service Appointment] [Scheduled] High Prio Work Order Overdue {!$Flow.CurrentDateTime}</interviewLabel>
    <label>[Service Appointment] [Scheduled] High Prio Work Order Overdue</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get the correct person to notify</description>
        <name>Get_Contract_Manager</name>
        <label>Get Contract Manager</label>
        <locationX>176</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Contract_Manager_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceTerritory.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the notification to be able to send it out</description>
        <name>Get_Custom_Notification</name>
        <label>Get Custom Notification</label>
        <locationX>308</locationX>
        <locationY>576</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Delay_Notification_to_Contract_Manager</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Standard_Notification</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Checkbox used to avoid duplicate notifications</description>
        <name>Set_Reminder_send_checkbox_to_True</name>
        <label>Set Reminder send checkbox to True</label>
        <locationX>308</locationX>
        <locationY>792</locationY>
        <inputAssignments>
            <field>Overdue_Reminder_Send__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Contract_Manager</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Unscheduled</stringValue>
            </value>
        </filters>
        <filters>
            <field>Due_Date_in_the_Past__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Overdue_Reminder_Send__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2024-10-28</startDate>
            <startTime>05:30:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>NotificationBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>The High Priority Service Appointment &quot;{!$Record.AppointmentNumber}&quot; for Customer {!$Record.Account.Name} is overdue!</text>
    </textTemplates>
    <textTemplates>
        <name>NotificationTitle</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Service Appointment &quot;{!$Record.AppointmentNumber}&quot; is overdue</text>
    </textTemplates>
    <variables>
        <name>varRecipientIDs</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
