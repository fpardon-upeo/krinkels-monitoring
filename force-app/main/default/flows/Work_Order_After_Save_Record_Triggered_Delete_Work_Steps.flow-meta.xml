<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <assignments>
        <name>Set_Check_Out_Original_Order</name>
        <label>Set Check Out Original Order</label>
        <locationX>264</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>WorkStepRecord.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>WorkStepRecord.ExecutionOrder</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>21.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>WorkStepCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>WorkStepRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Take_After_Work_Photos_Original_Order</name>
        <label>Set Take After Work Photos Original Order</label>
        <locationX>528</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>WorkStepRecord.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>WorkStepRecord.ExecutionOrder</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>20.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>WorkStepCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>WorkStepRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Which_Work_Step</name>
        <label>Which Work Step ?</label>
        <locationX>396</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>Set_Take_After_Work_Photos_Original_Order</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Take After Work Photos</defaultConnectorLabel>
        <rules>
            <name>Checkout</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Check Out</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Check_Out_Original_Order</targetReference>
            </connector>
            <label>Checkout</label>
        </rules>
    </decisions>
    <description>This flow deletes the work steps when the work order status changes from &apos;Dispatched&apos; to either &apos;Unscheduled&apos; or &apos;Scheduled&apos;.</description>
    <environments>Default</environments>
    <interviewLabel>[Work Order][After-Save][Record-Triggered] Delete Work Steps {!$Flow.CurrentDateTime}</interviewLabel>
    <label>[Work Order][After-Save][Record-Triggered] Delete Work Steps</label>
    <loops>
        <name>Loop</name>
        <label>Loop</label>
        <locationX>176</locationX>
        <locationY>647</locationY>
        <collectionReference>Get_Checkout_Take_After_Photos_Work_steps</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Which_Work_Step</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Work_Steps_Order</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordDeletes>
        <name>Delete_Work_Steps</name>
        <label>Delete Work Steps</label>
        <locationX>176</locationX>
        <locationY>431</locationY>
        <connector>
            <targetReference>Get_Checkout_Take_After_Photos_Work_steps</targetReference>
        </connector>
        <inputReference>Get_Work_Steps_Added_from_WOL</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>Get_Checkout_Take_After_Photos_Work_steps</name>
        <label>Get Checkout &amp; Take After Photos Work steps</label>
        <locationX>176</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>WorkOrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Take After Work Photos</stringValue>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Check Out</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>WorkStep</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Work_Steps_Added_from_WOL</name>
        <label>Get Work Steps Added from WOL</label>
        <locationX>176</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Delete_Work_Steps</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WorkOrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Added_from_WOL__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>WorkStep</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Work_Steps_Order</name>
        <label>Update Work Steps Order</label>
        <locationX>176</locationX>
        <locationY>1139</locationY>
        <inputReference>WorkStepCollection</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Work_Steps_Added_from_WOL</targetReference>
        </connector>
        <filterFormula>TEXT({!$Record__Prior.Status}) = &quot;Dispatched&quot; &amp;&amp; 
(TEXT({!$Record.Status}) = &quot;Unscheduled&quot; || TEXT({!$Record.Status}) = &quot;Scheduled&quot;)</filterFormula>
        <object>WorkOrder</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>WorkStepCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkStep</objectType>
    </variables>
    <variables>
        <name>WorkStepRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkStep</objectType>
    </variables>
</Flow>
