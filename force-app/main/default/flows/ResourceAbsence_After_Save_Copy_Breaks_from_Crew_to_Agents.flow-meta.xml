<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <assignments>
        <name>Add_to_Collection</name>
        <label>Add to Collection</label>
        <locationX>138</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>resourceAbsences</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>resourceAbsence</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Crew_Members</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Create_Resource_Absence_Break</name>
        <label>Create Resource Absence Break</label>
        <locationX>138</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>resourceAbsence.ResourceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Crew_Members.ServiceResourceId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>resourceAbsence.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Type</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>resourceAbsence.Type_of_Absence__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Type_of_Absence__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>resourceAbsence.Start</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Start</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>resourceAbsence.End</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.End</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>resourceAbsence.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Record_Type.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_to_Collection</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Resource_Type</name>
        <label>Check Resource Type</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Service_Crew</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Resource.ResourceType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>C</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_All_Active_Crew_Members</targetReference>
            </connector>
            <label>Is Service Crew</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>[ResourceAbsence] - After Save  - Copy Breaks from Crew to Agents {!$Flow.CurrentDateTime}</interviewLabel>
    <label>[ResourceAbsence] - After Save  - Copy Breaks from Crew to Agents</label>
    <loops>
        <name>Loop_Crew_Members</name>
        <label>Loop Crew Members</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <collectionReference>Get_All_Active_Crew_Members</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Create_Resource_Absence_Break</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Create_Absence_Records</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Absence_Records</name>
        <label>Create Absence Records</label>
        <locationX>50</locationX>
        <locationY>1055</locationY>
        <inputReference>resourceAbsences</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Get_All_Active_Crew_Members</name>
        <label>Get All Active Crew Members</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceCrewId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Resource.ServiceCrewId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Active_Member__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ServiceCrewMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Record_Type</name>
        <label>Get Record Type</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Crew_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ResourceAbsence</stringValue>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Break</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_Resource_Type</targetReference>
        </connector>
        <object>ResourceAbsence</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <variables>
        <name>resourceAbsence</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ResourceAbsence</objectType>
    </variables>
    <variables>
        <name>resourceAbsences</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ResourceAbsence</objectType>
    </variables>
</Flow>
